input CreatePostInput {
  content: String
  examples: [String!]
  title: String!
}

input CreateUserInput {
  bio: String
  canton: String
  country: String
  email: String!
  image: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Dislike {
  author: User!
  authorId: ID!
  createdAt: DateTime!
  post: Post!
  postId: ID!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Like {
  author: User!
  authorId: ID!
  createdAt: DateTime!
  post: Post!
  postId: ID!
}

type Mutation {
  changeUserRole(role: Role!, userId: String!): User
  createPost(data: CreatePostInput!): Post
  createUser(data: CreateUserInput!): User
  deleteDislike(data: PostIdInput!): Dislike
  deleteLike(data: PostIdInput!): Like
  deletePost(data: PostIdInput!): Post
  deleteUser(data: UserIdInput!): User
  dislikePost(data: PostIdInput!): Dislike
  likePost(data: PostIdInput!): Post
  updatePost(data: UpdatePostInput!): Post
  updateUser(data: UpdateUserInput!): User
}

type Post {
  author: User!
  content: String
  dislikes: [Dislike!]!
  dislikesCount: Int!
  examples: [String!]!
  id: ID!
  likes: [Like!]!
  likesCount: Int!
  published: Boolean!
  title: String!
}

input PostIdInput {
  postId: String!
}

type Query {
  me: User!
  post(data: PostIdInput!): Post
  posts(q: String): [Post!]
  user(email: String!): User!
  users: [User!]!
}

enum Role {
  ADMIN
  USER
}

input UpdatePostInput {
  content: String
  examples: [String!]
  id: String!
  published: Boolean
  title: String
}

input UpdateUserInput {
  bio: String
  canton: String
  country: String
  id: String!
  image: String
  name: String
}

type User {
  bio: String
  canton: String
  country: String
  dislikes: [Dislike!]!
  dislikesCount: Int!
  email: String!
  emailVerified: DateTime
  id: ID!
  image: String
  likes: [Like!]!
  likesCount: Int!
  myPublishedPostsCount: Int!
  myUnpublishedPostsCount: Int!
  name: String
  posts: [Post!]!
  role: Role!
}

input UserIdInput {
  userId: String!
}